{% import 'formalism/macros' as macros %}
{% spaceless %}

{% set defaults = {
    label: 'Label',
    name: '',
    options: [],
    theme: 'outlined',
    themeOptions: 'outlined',
    classes: [],
    id: 'checkbox-group' ~ random(5000),
    error: '',
    instructions: '',
    minColumnWidth: null,
    oneLine: false,
    hasError: false,
    isRequired: false,
    indicator: {
        isHidden: false,
        required: '*',
        optional: 'optional',
    },
    attributesContainer: {},
    attributesInner: {},
    baseClass: 'f-fieldset',
} %}

{% set self = craft.formalism.deepMerge(defaults, params) %}
{% set bc = self.baseClass %}
{% set hasError = self.error or self.hasError %}
{% set errorClass = hasError ? 'has-error' : '' %}
{% set indicator = not self.indicator.isHidden|default(false) ? macros.indicator(self.isRequired ? self.indicator.required|default('*') : null, null, bc) %}
{% set legendChildren = self.isRequired ? '&nbsp;'|raw ~ indicator : '' %}

{% set attributesContainer = macros.attributes(craft.formalism.deepMerge(self.attributesContainer, {
    class: [
        [bc, [bc,self.theme]|join('--') ]|join(' '),
        self.classes|join(' '),
        errorClass
    ]|join(' ')|trim,
    'data-field-container': '',
})) %}

{% if self.minColumnWidth and self.oneLine %}{% spaceless %}
    {% set vendorColumnText %} style="min-width:{{ self.minColumnWidth }};"{% endset %}
{% endspaceless %}{% endif %}

{% set attributesInner = macros.attributes(craft.formalism.deepMerge(self.attributesInner, {
    class: [
        bc ~ '__inner',
        bc ~ '__inner--' ~ (self.oneLine ? 'one-line' : 'stacked')
]|join(' '),
    for: self.id,
})) %}

<fieldset {{ attributesContainer }}>
    {% if self.label %}
        <legend class="{{ bc }}__legend" data-field-legend>
            {{ macros.label(self.label, bc, legendChildren) }}
        </legend>
    {% endif %}
    {{ macros.messages(self.error, self.instructions, bc) }}
    <div {{ attributesInner }}>
        {% for option in self.options %}
            <div{{ vendorColumnText|default }}>
                {{ craft.formalism.checkbox({
                    theme: self.themeOptions,
                    name: self.name ~ '[]',
                    id: self.id ~ '-' ~ loop.index0,
                    isFieldGroup: true,
                }|merge(option), {
                    error: defaults.error,
                    hasError: defaults.hasError
                }) }}
            </div>
        {% endfor %}
    </div>
</fieldset>

{% endspaceless %}
